---
- name: Gather Info
  hosts: all
  connection: ansible.builtin.local
  gather_facts: false
  vars_prompt:

#variables
  - name: username
    prompt: Enter authentication username
    private: false

  - name: password
    prompt: Enter authenticaion password
    private: yes

  - name: server
    prompt: Enter store 4 digit store number
    private: false

  tasks:

#Configure_DNS
  - name: DNS
    scale_computing.hypercore.dns_config:
      cluster_instance:
        host: "https://{{ inventory_hostname }}"
        username: "{{ scale_user }}"
        password: "{{ scale_pass }}"
      search_domains:
        - example.com
      dns_servers:
        - 8.8.8.8
        - 4.4.4.4
      state: set
    register: dns
    with_items: [1,2]
  - debug:
      var: dns

#Import MFS1
  - name: MFS1 Import
    scale_computing.hypercore.vm_import:
      cluster_instance:
        host: "https://{{ inventory_hostname }}"
        username: "{{ scale_user }}"
        password: "{{ scale_pass }}"
      vm_name: "ST{{ server }}MFS1"
      smb:
        server: imagestoredev.owfg.com
        path: '/Images/2019_Gold_MFS1/MFS1-Gold-2019'
        file_name: MFS1-Gold-2019.xml
        username: overwaitea\{{ username }}
        password: "{{ password }}"
    register: mfs1

  - name: MFS1 Results
    ansible.builtin.debug:
      msg: "{{ mfs1.msg }}"

#Import PAS
  - name: PAS Import
    scale_computing.hypercore.vm_import:
      cluster_instance:
        host: "https://{{ inventory_hostname }}"
        username: "{{ scale_user }}"
        password: "{{ scale_pass }}"
      vm_name: "ST{{ server }}PAS"
      smb:
        server: imagestoredev.owfg.com
        path: '/Images/Gold_PAS/PAS-Gold-2019'
        file_name: PAS-Gold-2019.xml
        username: overwaitea\{{ username }}
        password: "{{ password }}"
    register: pas

  - name: PAS Results
    ansible.builtin.debug:
      msg: "{{ pas.msg }}"

#Import PASDB
  - name: PASDB Import
    scale_computing.hypercore.vm_import:
      cluster_instance:
        host: "https://{{ inventory_hostname }}"
        username: "{{ scale_user }}"
        password: "{{ scale_pass }}"
      vm_name: "ST{{ server }}DB1WP"
      smb:
        server: imagestoredev.owfg.com
        path: '/Images/Gold_PAS_SQL/PAS-SQL-Gold2019'
        file_name: PAS-SQL-Gold2019.xml
        username: overwaitea\{{ username }}
        password: "{{ password }}"
    register: pasdb

  - name: PASDB Results
    ansible.builtin.debug:
      msg: "{{ pasdb.msg }}"

#Configure Cluster Name
  - name: Configure Cluster Name
    scale_computing.hypercore.cluster_name:
      cluster_instance:
        host: "https://{{ inventory_hostname }}"
        username: "{{ scale_user }}"
        password: "{{ scale_pass }}"
      name_new: Store {{ server }} Cluster
    register: cluster

  - name: Cluster Name Results
    ansible.builtin.debug:
      msg: "{{ cluster.record.name }}"

#Configure Snapshot Schedule

  - name: Configure MFS1 Snapshot Schedule
    scale_computing.hypercore.snapshot_schedule:
      cluster_instance:
        host: "https://{{ inventory_hostname }}"
        username: "{{ scale_user }}"
        password: "{{ scale_pass }}"
      name: MFS1 Backup
      state: present
      recurrences:
      - name: MFS1 Backup
        frequency: "FREQ=DAILY;INTERVAL=1" #once per day
        start: "2010-01-01 04:00:00" #start time
        local_retention: "{{ 2 * 24*60*60 }}" #2 days
        remote_retention: "0"
    register: MFS1snapshot

  - name: Snapshot Result
    ansible.builtin.debug:
      msg: "{{ MFS1snapshot.record }}"

  - name: Configure PAS Snapshot Schedule
    scale_computing.hypercore.snapshot_schedule:
      cluster_instance:
        host: "https://{{ inventory_hostname }}"
        username: "{{ scale_user }}"
        password: "{{ scale_pass }}"
      name: PAS Backup
      state: present
      recurrences:
      - name: MFS1 Backup
        frequency: "FREQ=DAILY;INTERVAL=1" #once per day
        start: "2010-01-01 02:00:00" #start time
        local_retention: "{{ 2 * 24*60*60 }}" #2 days
        remote_retention: "0"
    register: PASsnapshot

  - name: Snapshot Result
    ansible.builtin.debug:
      msg: "{{ PASsnapshot.record }}"

#SMTP Configuration

  - name: Configure SMTP
    scale_computing.hypercore.smtp:
      cluster_instance:
        host: "https://{{ inventory_hostname }}"
        username: "{{ scale_user }}"
        password: "{{ scale_pass }}"
      from_address: "{{ server }}_Cluster@saveonfoods.com"
      port: 25
      server: mail.owfg.com
      use_ssl: false
    register: SMTP

  - name: SMTP Results
    ansible.builtin.debug:
      msg: "{{ SMTP.record }}"

#Set MFS1 Snapshot Schedule

  - name: Set MFS1 Snapshot Schedule
    scale_computing.hypercore.vm_params:
      cluster_instance:
        host: "https://{{ inventory_hostname }}"
        username: "{{ scale_user }}"
        password: "{{ scale_pass }}"
      vm_name: ST{{ server }}MFS1
      snapshot_schedule: "MFS1 Backup"

#Set PAS Snapshot Schedule

  - name: Set PAS Snapshot Schedule
    scale_computing.hypercore.vm_params:
      cluster_instance:
        host: "https://{{ inventory_hostname }}"
        username: "{{ scale_user }}"
        password: "{{ scale_pass }}"
      vm_name: ST{{ server }}PAS
      snapshot_schedule: "PAS Backup"

#Set PAS Snapshot Schedule

  - name: Set PASDB Snapshot Schedule
    scale_computing.hypercore.vm_params:
      cluster_instance:
        host: "https://{{ inventory_hostname }}"
        username: "{{ scale_user }}"
        password: "{{ scale_pass }}"
      vm_name: ST{{ server }}DB1WP
      snapshot_schedule: "PAS Backup"

      #Time Zone Configuration

  - name: Configure Timezone
    scale_computing.hypercore.time_zone:
      cluster_instance:
        host: "https://{{ inventory_hostname }}"
        username: "{{ scale_user }}"
        password: "{{ scale_pass }}"
      zone: "America/Vancouver"
    register: timezone

  - name: Timezone Result
    ansible.builtin.debug:
      msg: "{{ timezone.record }}"

#Time Server Configuration

  - name: Configure Time Server
    scale_computing.hypercore.time_server:
      cluster_instance:
        host: "https://{{ inventory_hostname }}"
        username: "{{ scale_user }}"
        password: "{{ scale_pass }}"
      source: ntp.owfg.com
    register: timeserver

  - name: Time Server Result
    ansible.builtin.debug:
      msg: "{{ timeserver.record }}"
